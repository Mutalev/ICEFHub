import telebot
import Conf1
import json
import random
from telebot import types
from Dasboot import findGroups,findGroup1,findGroup2
from PDFslayer import *
from functools import partial

bot = telebot.TeleBot(Conf1.TOKEN)

users_who_clicked = set()

with open('database.json', encoding='UTF-8') as file:
    all_users_data1 = json.load(file)

with open('raffle.json', encoding='UTF-8') as file:
    participants1 = json.load(file)

all_users_data = {}
for i in all_users_data1:
    all_users_data[int(i)] = all_users_data1[i]

participants = {}
for i in participants1:
    participants[int(i)] = participants1[i]

def dc(n):
    s = ''
    f = 1
    c = 0
    for i, j  in n.items():
        if f < 151:
            if j is None:
                s += f'{f}. {i} @none\n'
            else:
                s += f'{f}. {i} @{j}\n'
            f += 1
        else:
            if c == 0:  
                bot.send_message(1894542070, s)
                c = 1
                s = ''
            if j is None:
                s += f'{f}. {i} @none\n'
            else:
                s += f'{f}. {i} @{j}\n'
            f += 1
    bot.send_message(1894542070, s)

def data(id, nickname):
    all_users_data[id] = nickname

def js(n):
    with open('database.json', 'w', encoding='UTF-8') as file:
        json.dump(n, file, indent=4)

def js_participants(n):
    with open('raffle.json', 'w', encoding='UTF-8') as file:
        json.dump(n, file, indent=4)

def ras(message):
    user_to_remove = []
    for i in all_users_data:
        try:
            bot.send_message(i, message.text)
        except Exception as e:
            user_to_remove.append(i)
    for i in user_to_remove:
        del all_users_data[i]


@bot.message_handler(commands=['start'])
def main(message):
    data(message.from_user.id, message.from_user.username)
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('üìä –í–∞—à–∏ –î–∞–Ω–Ω—ã–µ')
    btn4 = types.KeyboardButton('üóì –ü–æ–ª—É—á—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ(pdf)')
    markup.row(btn1, btn4)
    btn2 = types.KeyboardButton('‚ÑπÔ∏è –ò–Ω—Ñ–∞ –ø–æ –ê–∫–∞–¥–µ–º. –≥—Ä—É–ø–ø–∞–º')
    btn3 = types.KeyboardButton('‚ÑπÔ∏è –ò–Ω—Ñ–∞ –ø–æ –ê–Ω–≥–ª. –≥—Ä—É–ø–ø–∞–º')
    btn5 = types.KeyboardButton('‚ÑπÔ∏è –ò–Ω—Ñ–∞ –ø–æ –£—á–∏—Ç–µ–ª—è–º(pdf)')
    btn6 = types.KeyboardButton('üéü –†–æ–∑—ã–≥—Ä—ã—à –±–∏–ª–µ—Ç–∞ –Ω–∞ —Ç—É—Å–∏—á')
    markup.row(btn2, btn3)
    markup.row(btn5, btn6)
    text = """
    <b>–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!</b> 

    üìä <b>–í–∞—à–∏ –î–∞–Ω–Ω—ã–µ</b> - –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º –≤–∞—Å —á–µ–ª–æ–≤–µ–∫–µ (–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –ú–ò–≠–§: –≥—Ä—É–ø–ø—ã, –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).

    ‚ÑπÔ∏è <b>–ò–Ω—Ñ–∞ –ø–æ –ê–∫–∞–¥–µ–º. –≥—Ä—É–ø–ø–∞–º</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø–µ (—Å–æ—Å—Ç–∞–≤ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).

    ‚ÑπÔ∏è <b>–ò–Ω—Ñ–∞ –ø–æ –ê–Ω–≥–ª. –≥—Ä—É–ø–ø–∞–º</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–æ–π –≥—Ä—É–ø–ø–µ (—Å–æ—Å—Ç–∞–≤ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).

    ‚ÑπÔ∏è <b>–ò–Ω—Ñ–∞ –ø–æ –£—á–∏—Ç–µ–ª—è–º(pdf)</b> - —Å–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π –∏ –∏—Ö –ø–æ—á—Ç—ã, –æ—Ñ–∏—Å–Ω—ã–µ —á–∞—Å—ã(–Ω–µ –≤—Å–µ!).

    üóì <b>–ü–æ–ª—É—á—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ(pdf)</b> - –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.

    üéü <b>–†–æ–∑—ã–≥—Ä—ã—à –±–∏–ª–µ—Ç–∞ –Ω–∞ —Ç—É—Å–∏—á</b> - Monasterio rave (6 –æ–∫—Ç—è–±—Ä—è - –ø—è—Ç–Ω–∏—Ü–∞).

    üîß <i>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ</i> ( /start ).

    üìù <i>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ –±–æ—Ç–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —Ç–æ –∂–º–∏—Ç–µ</i> ( /help ).
    """
    bot.send_message(message.chat.id, text, parse_mode='HTML', reply_markup=markup)    # bot.register_next_step_handler(message, on_click)

def add_user(message):
    s = findGroups(message.text).split()
    bot.send_message(1894542070, f'{message.text}\n{message.from_user.username}\n{message.from_user.first_name, message.from_user.last_name}' )
    if len(s) == 0:
        bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–æ—Ä–º–∞—Ç–µ (–§–∞–º–∏–ª–∏—è –ò–º—è) –∏–ª–∏ —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ—Ç –≤ –ú–ò–≠–§ 1–π –∫—É—Ä—Å')
    else:
        bot.send_message(message.chat.id, f"{s[0]}  <b>{s[1]}</b> \n{s[2]}   <b>{s[3]}</b>", parse_mode='html')
        markup = types.InlineKeyboardMarkup()
        datatosend = s[1] + ' ' + s[3]
        btn1 = types.InlineKeyboardButton('–ú–æ—ë —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data=f'fac_{datatosend}')
        markup.row(btn1)
        bot.send_message(message.chat.id, '–ñ–º–∏', reply_markup=markup)

    
@bot.message_handler(commands=['admin7162'])
def main(message):
    if message.from_user.id == 1894542070:
        bot.register_next_step_handler(message, ras)

@bot.message_handler(commands=['admin'])
def main(message):
    if message.from_user.id == 1894542070:
        dc(all_users_data)

@bot.message_handler(commands=['help'])
def main(message):
    data(message.from_user.id, message.from_user.username)
    bot.send_message(message.chat.id, '<b>–ü–∞–º–∞–≥–∏—Ç–µ</b>\n –ü–∏—à–∏: @Popuskinmutabor', parse_mode='html')

@bot.message_handler(commands=['info'])
def main(message):
    data(message.from_user.id, message.from_user.username)
    text = """
    üìä <b>–í–∞—à–∏ –î–∞–Ω–Ω—ã–µ</b> - –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –ø–æ–ª—É—á–∏—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–º –≤–∞—Å —á–µ–ª–æ–≤–µ–∫–µ (–≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ –ú–ò–≠–§: –≥—Ä—É–ø–ø—ã, –ª–∏—á–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).
    ‚ÑπÔ∏è <b>–ò–Ω—Ñ–∞ –ø–æ –ê–∫–∞–¥–µ–º. –≥—Ä—É–ø–ø–∞–º</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–æ–π –≥—Ä—É–ø–ø–µ (—Å–æ—Å—Ç–∞–≤ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).
    ‚ÑπÔ∏è <b>–ò–Ω—Ñ–∞ –ø–æ –ê–Ω–≥–ª. –≥—Ä—É–ø–ø–∞–º</b> - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–æ–π –≥—Ä—É–ø–ø–µ (—Å–æ—Å—Ç–∞–≤ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ).
    ‚ÑπÔ∏è <b>–ò–Ω—Ñ–∞ –ø–æ –£—á–∏—Ç–µ–ª—è–º(pdf)</b> - —Å–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π –∏ –∏—Ö –ø–æ—á—Ç—ã, –æ—Ñ–∏—Å–Ω—ã–µ —á–∞—Å—ã(–Ω–µ –≤—Å–µ!).
    üóì <b>–ü–æ–ª—É—á—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ(pdf)</b> - –æ–±—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã.
    üîß <i>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –∫–∞–∫–∏–µ-—Ç–æ –ø—Ä–æ–±–ª–µ–º—ã —Å –±–æ—Ç–æ–º, —Å–Ω–∞—á–∞–ª–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –µ–≥–æ</i> ( /start ).
    üìù <i>–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∏–¥–µ–∏ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ –±–æ—Ç–∞ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏–ª–∏ –≤—ã –Ω–∞—à–ª–∏ –æ—à–∏–±–∫—É –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏, —Ç–æ –∂–º–∏—Ç–µ</i> ( /help ).
    """
    bot.send_message(message.chat.id, text, parse_mode='HTML')

def ref(message):
    r = int(message.text)
    if r > 11 or r  < 0:
        bot.send_message(message.chat.id, '–ò—Ö –≤—Å–µ–≥–æ 11, –±—Ä–æ)')
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏')
        bot.register_next_step_handler(message, partial(fr, r=r))

def ref1(message):
    r = int(message.text)
    if r > 14 or r  < 0:
        bot.send_message(message.chat.id, '–ò—Ö –≤—Å–µ–≥–æ 14, –±—Ä–æ)')
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏')
        bot.register_next_step_handler(message, partial(fr1, r=r))

def fr(message, r):
    message1 = message
    if type(message1) != str:
        message1 = str(message1.text)
    if message1.lower() == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        bot.send_message(message.chat.id, f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dMonday[r]}')
    if message1.lower() == '–≤—Ç–æ—Ä–Ω–∏–∫':
        bot.send_message(message.chat.id, f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dTuseday[r]}')
    if message1.lower() == '—Å—Ä–µ–¥–∞':
        bot.send_message(message.chat.id, f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dWednesday[r]}')
    if message1.lower() == '—á–µ—Ç–≤–µ—Ä–≥':
        bot.send_message(message.chat.id, f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dThursday[r]}')
    if message1.lower() == '–ø—è—Ç–Ω–∏—Ü–∞':
        bot.send_message(message.chat.id, f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dFriday[r]}')
    if message1.lower() == '—Å—É–±–±–æ—Ç–∞':
        bot.send_message(message.chat.id, f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dSaturday[r]}')



def fr1(message, r):
    message1 = message
    if type(message1) != str:
        message1 = str(message1.text)
    if message1.lower() == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        bot.send_message(message.chat.id, f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n {daMonday[r]}')
    if message1.lower() == '–≤—Ç–æ—Ä–Ω–∏–∫':
        bot.send_message(message.chat.id, f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n {daTuseday[r]}')
    if message1.lower() == '—Å—Ä–µ–¥–∞':
        bot.send_message(message.chat.id, f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n {daWednesday[r]}')
    if message1.lower() == '—á–µ—Ç–≤–µ—Ä–≥':
        bot.send_message(message.chat.id, f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n {daThursday[r]}')
    if message1.lower() == '–ø—è—Ç–Ω–∏—Ü–∞':
        bot.send_message(message.chat.id, f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n {daFriday[r]}')
    if message1.lower() == '—Å—É–±–±–æ—Ç–∞':
        bot.send_message(message.chat.id, f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n {daSaturday[r]}')

def graf(message):
    r = int(message.text)
    if r > 11 or r  < 0:
        bot.send_message(message.chat.id, '–ò—Ö –≤—Å–µ–≥–æ 11, –±—Ä–æ)')
    else:
        bot.send_message(message.chat.id, findGroup1(r))

def graf1(message):
    r = int(message.text)
    if r > 14 or r < 1:
        bot.send_message(message.chat.id, '–ò—Ö –≤—Å–µ–≥–æ 14, –±—Ä–æ)')
    else:
        bot.send_message(message.chat.id, findGroup2(r))


def combined_function(message, r1, r2):
    fr(message, int(r1))
    fr1(message, int(r2))

def comfunc1(mes, r1, r2, chat_id):
    s = '\n\n'.join([far(mes, int(r1), chat_id), far1(mes, int(r2), chat_id)])
    return s

def far(mes, r1, chat_id):
    if mes.lower() == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        return(f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dMonday[r1]}')
    if mes.lower() == '–≤—Ç–æ—Ä–Ω–∏–∫':
        return(f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dTuseday[r1]}')
    if mes.lower() == '—Å—Ä–µ–¥–∞':
        return(f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dWednesday[r1]}')
    if mes.lower() == '—á–µ—Ç–≤–µ—Ä–≥':
        return(f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dThursday[r1]}')
    if mes.lower() == '–ø—è—Ç–Ω–∏—Ü–∞':
        return(f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dFriday[r1]}')
    if mes.lower() == '—Å—É–±–±–æ—Ç–∞':
        return(f'–ê–∫–∞–¥–µ–º –≥—Ä—É–ø–ø–∞: \n{dSaturday[r1]}')




def far1(mes, r2, chat_id):
    if mes.lower() == '–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫':
        return(f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n{daMonday[r2]}')
    if mes.lower() == '–≤—Ç–æ—Ä–Ω–∏–∫':
        return(f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n{daTuseday[r2]}')
    if mes.lower() == '—Å—Ä–µ–¥–∞':
        return(f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n{daWednesday[r2]}')
    if mes.lower() == '—á–µ—Ç–≤–µ—Ä–≥':
        return(f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n{daThursday[r2]}')
    if mes.lower() == '–ø—è—Ç–Ω–∏—Ü–∞':
        return(f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n{daFriday[r2]}')
    if mes.lower() == '—Å—É–±–±–æ—Ç–∞':
        return(f'–ê–Ω–≥–ª –≥—Ä—É–ø–ø–∞: \n{daSaturday[r2]}')


@bot.callback_query_handler(lambda callback: True)
def callback_message(callback):
    data(callback.from_user.id, callback.from_user.username)
    js(all_users_data)
    if '-' in callback.data:
        command, data_received, global_chat_id = callback.data.split('-')
        a = data_received.split()
        d = {
            'Monday':'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
            'Tuseday':'–í—Ç–æ—Ä–Ω–∏–∫',
            'Wednesday':'–°—Ä–µ–¥–∞',
            'Thursday':'–ß–µ—Ç–≤–µ—Ä–≥',
            'Friday':'–ü—è—Ç–Ω–∏—Ü–∞',
            'Sunday':'–°—É–±–±–æ—Ç–∞'
        }
        bot.send_message(callback.message.chat.id, comfunc1(d[command], a[0], a[1], global_chat_id))
    if '_' in callback.data:
        command, data_received = callback.data.split('_')
        global_chat_id = callback.message.chat.id
        if command == "fac":
            a = data_received.split()
            data_to = a[0] + ' ' + a[1]
            markup = types.InlineKeyboardMarkup()
            btn1 = types.InlineKeyboardButton('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', callback_data=f'Monday-{data_to}-{global_chat_id}')
            btn2 = types.InlineKeyboardButton('–í—Ç–æ—Ä–Ω–∏–∫', callback_data=f'Tuseday-{data_to}-{global_chat_id}')
            btn3 = types.InlineKeyboardButton('–°—Ä–µ–¥–∞', callback_data=f'Wednesday-{data_to}-{global_chat_id}')
            btn4 = types.InlineKeyboardButton('–ß–µ—Ç–≤–µ—Ä–≥', callback_data=f'Thursday-{data_to}-{global_chat_id}')
            btn5 = types.InlineKeyboardButton('–ü—è—Ç–Ω–∏—Ü–∞', callback_data=f'Friday-{data_to}-{global_chat_id}')
            btn6 = types.InlineKeyboardButton('–°—É–±–±–æ—Ç–∞', callback_data=f'Sunday-{data_to}-{global_chat_id}')
            markup.row(btn1, btn2, btn3)
            markup.row(btn4, btn5, btn6)
            bot.send_message(callback.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏', reply_markup=markup)
            # bot.register_next_step_handler(callback.message, partial(combined_function, r1=a[0], r2=a[1]))
    else:
        if callback.data == 'gaf':
            bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã' )
            bot.register_next_step_handler(callback.message, graf)
        if callback.data == 'gaf1':
            bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã' )
            bot.register_next_step_handler(callback.message, ref)
        if callback.data == 'fac':
            bot.register_next_step_handler(callback.message, ref)
        if callback.data == 'gaf2':
            bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã' )
            bot.register_next_step_handler(callback.message, graf1)
        if callback.data == 'gaf3':
            bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã' )
            bot.register_next_step_handler(callback.message, ref1)






@bot.message_handler(content_types=['text'])
def on_click(message):
    data(message.from_user.id, message.from_user.username)
    js(all_users_data)
    s = str(message.from_user.last_name) + ' ' + str(message.from_user.first_name)
    if message.text == 'üìä –í–∞—à–∏ –î–∞–Ω–Ω—ã–µ':
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ: –§–∞–º–∏–ª–∏—é –ò–º—è' )
        bot.register_next_step_handler(message, add_user )
    if message.text == '‚ÑπÔ∏è –ò–Ω—Ñ–∞ –ø–æ –ê–∫–∞–¥–µ–º. –≥—Ä—É–ø–ø–∞–º':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã', callback_data='gaf')
        btn2 = types.InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã', callback_data='gaf1')
        markup.row(btn1,btn2)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)
    if message.text == '‚ÑπÔ∏è –ò–Ω—Ñ–∞ –ø–æ –ê–Ω–≥–ª. –≥—Ä—É–ø–ø–∞–º':
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton('–£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã', callback_data='gaf2')
        btn2 = types.InlineKeyboardButton('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã', callback_data='gaf3')
        markup.row(btn1,btn2)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)
    if message.text == 'üóì –ü–æ–ª—É—á—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ(pdf)':
        with open('1-–∫—É—Ä—Å-02.10-07.10.pdf', 'rb') as f:
            bot.send_document(message.chat.id, f)
    if message.text == '‚ÑπÔ∏è –ò–Ω—Ñ–∞ –ø–æ –£—á–∏—Ç–µ–ª—è–º(pdf)':
        with open('–£—á–∏—Ç–µ–ª—è_–º–∏—ç—Ñ.pdf', 'rb') as f:
            bot.send_document(message.chat.id, f)
    if message.text == 'üéü –†–æ–∑—ã–≥—Ä—ã—à –±–∏–ª–µ—Ç–∞ –Ω–∞ —Ç—É—Å–∏—á':
        if message.chat.id in participants:
            bot.send_message(message.chat.id, f'–í—ã <b>—É–∂–µ</b> —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–∞ <b>Monasterio</b> –≤ —Å–≤—è—Ç—ã–Ω–µ - <b>Mutabor</b> .\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: <b>{len(participants)}</b>\n\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–æ–∫–æ–±—Ä—É: <b>{1/len(participants):.2g}</b>', parse_mode='HTML')
        else:
            participants[message.chat.id] = message.from_user.username
            bot.send_message(message.chat.id, f'–¢–µ–ø–µ—Ä –≤—ã —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–∞ <b>Monasterio</b> –≤ —Å–≤—è—Ç—ã–Ω–µ - <b>Mutabor</b>.\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: <b>{len(participants)}</b>\n\n–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–Ω–æ–∫–æ–±—Ä—É: <b>{1/len(participants):.2g}</b>', parse_mode='HTML')
        bot.send_message(1894542070, '\n'.join(f'{i + 1}. {j} @{participants[j]}' for i, j in enumerate(participants)))
        js_participants(participants)
    if message.text == '–†–æ–∑—ã–≥—Ä—ã—à—å –±–∏–ª–µ—Ç–∞ –Ω–∞ —Ç—É—Å–∏—á':
        bot.send_message(message.chat.id, '–ñ–º–∏: /start' )
        # user_nickname = message.from_user.username
        # if user_nickname not in users_who_clicked:
        #     users_who_clicked.add(user_nickname)
        #     bot.send_message(message.chat.id, f'–í—ã —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: <b>{str(len(users_who_clicked))}</b>, –≤–µ—Ä—è—Ç–Ω–æ—Å—Ç—å –ø–æ–±–µ–¥—ã: <b>{1/len(users_who_clicked):.2g}</b>', parse_mode='HTML' )
        # else:
        #     bot.send_message(message.chat.id, f'–í—ã <b>—É–∂–µ</b> —É—á–∞–≤—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: <b>{str(len(users_who_clicked))}</b>, –≤–µ—Ä—è—Ç–Ω–æ—Å—Ç—å –ø–æ–±–µ–¥—ã: <b>{1/len(users_who_clicked):.2g}</b>', parse_mode='HTML')
        # bot.send_message(1894542070, '\n'.join(f'{i + 1}. {j}' for i, j in enumerate(users_who_clicked)))
        # print(users_who_clicked)


bot.polling(non_stop=True)